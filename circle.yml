# general build-related configurations that are not related to a specific phase,
general:
  artifacts:
    - "build/reports"
    - "CHANGELOG.md"
    - "build/libs"

  branches:
    ignore:
      - gh-pages # list of branches to ignore

#adjusting the VM to your preferences and requirements
machine:
  java:
    version: oraclejdk8
  timezone: Europe/Berlin

# setting up your project's language-specific dependencies
dependencies:
  override:
    - chmod +x gradlew

    # required to start first for it to compile
    # start gradle daemon
    - ./gradlew -b changelog.gradle generateChangelog

  cache_directories:
    - "~/.gradle"
    - ".gradle"

# running your tests
test:
  override:
    - ./gradlew test
    - ./gradlew jacocoTestReport
    - ./gradlew pitest

  post:
    # after all tests build the jars
    # generates changelog
    # generates jar
    # generates javadoc
    # generates sources
    # tests
    # coverages
    # may contain duplicates but worth the whole process
    - ./gradlew build

    # check into git
    - git config user.name "Circle CI"
    - git config user.email "robot+circleci@thatsich.de"
    - git reset --hard
    - git checkout gh-pages


# deploying your code to your web servers
# Only executed if all tasks are successful
deployment:
  # just a label. Label names are up to you
  production:
    branch: production
    commands:
      # publish javadoc to gh-pages so it can be hosted there
      - mkdir -p javadoc/stable
      - mv build/docs/javadoc/* javadoc/stable/
      - git add javadoc/stable/* --force --ignore-removal
      - git commit -m "[ci skip] Generate Javadoc"

      # publish test reports
      - mkdir -p test/stable
      - mv build/reports/tests/* test/stable/
      - git add test/stable/* --force --ignore-removal
      - git commit -m "[ci skip] Generate test"

      # publish coverage reports
      - mkdir -p coverage/stable
      - mv build/reports/jacoco/test/html/* coverage/stable/
      - git add coverage/stable/* --force --ignore-removal
      - git commit -m "[ci skip] Generate coverage"

      # publish mutation reports
      - mkdir -p pitest/stable
      - mv build/reports/pitest/*/* pitest/stable/
      - git add pitest/stable/* --force --ignore-removal
      - git commit -m "[ci skip] Generate mutation"

      # publish changelog
      - mkdir -p changelog/stable
      - cp CHANGELOG.md changelog/stable/CHANGELOG.md
      - git add changelog/stable/CHANGELOG.md --force --ignore-removal
      - git commit -m "[ci skip] Generate changelog"

      # end publishing
      - git push origin gh-pages

      # upload to bintray
      - ./gradlew bintrayUpload

      # report coverage to coveralls
      - ./gradlew coveralls

      # release a github release note as release
      - ./gradlew githubRelease

  release:
    branch: release
    commands:
#       publish github pre-release
#       publish github tag

      # publish javadoc to gh-pages so it can be hosted there
      - mkdir -p javadoc/pre
      - cp -a build/docs/javadoc/* javadoc/pre/
      - git add .
      - git commit -m "[ci skip] Generate Javadoc"

      # publish test reports
      - mkdir -p test/pre
      - cp -a build/reports/tests/* test/pre/
      - git add .
      - git commit -m "[ci skip] Generate test"

      # publish coverage reports
      - mkdir -p coverage/pre
      - cp -a build/reports/jacoco/test/html/* coverage/pre/
      - git add .
      - git commit -m "[ci skip] Generate coverage"

      # publish mutation reports
      - mkdir -p pitest/pre
      - cp -a build/reports/pitest/*/* pitest/pre/
      - git add .
      - git commit -m "[ci skip] Generate mutation"

      # publish changelog
      - mkdir -p changelog/pre
      - cp -a CHANGELOG.md changelog/pre/CHANGELOG.md
      - git add .
      - git commit -m "[ci skip] Generate changelog"

      # end publishing
      - git push origin gh-pages

      # upload to bintray as pre-release
      - ./gradlew bintrayUpload

      # report coverage to coveralls
      - ./gradlew coveralls

      # release a github release note as pre-release
      - ./gradlew githubRelease

  develop:
    branch: develop
    commands:
      # publish javadoc to gh-pages so it can be hosted there
      - mkdir -p javadoc/latest
      - cp -a build/docs/javadoc/* javadoc/latest/ --verbose
      - git add --force --ignore-removal --verbose javadoc/latest/*
      - git commit --verbose -m "[ci skip] Generate Javadoc"

      # publish test reports
      - mkdir -p test/latest
      - cp -a build/reports/tests/* test/latest/ --verbose
      - git add --verbose --force --ignore-removal test/latest/*
      - git commit --verbose -m "[ci skip] Generate test"

      # publish coverage reports
      - mkdir -p coverage/latest
      - cp -a build/reports/jacoco/test/html/* coverage/latest/ --verbose
      - git add  --force --ignore-removal --verbose coverage/latest/*
      - git commit --verbose -m "[ci skip] Generate coverage"

      # publish mutation reports
      - mkdir -p pitest/latest
      - cp -a build/reports/pitest/*/* pitest/latest/ --verbose
      - git add --force --ignore-removal --verbose pitest/latest/*
      - git commit --verbose -m "[ci skip] Generate mutation"

      # publish changelog
      - mkdir -p changelog/latest
      - cp -a CHANGELOG.md changelog/latest/CHANGELOG.md --verbose
      - git add --force --ignore-removal --verbose changelog/latest/CHANGELOG.md
      - git commit --verbose -m "[ci skip] Generate changelog"

      # end publishing
      - git push origin gh-pages

      # report coverage to coveralls
      - ./gradlew coveralls

      # publish github tag
#      -

#  pullrequest:
#    branch: /.*/
#    commands:
#      # just build?
#      -